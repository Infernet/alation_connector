{"version":3,"sources":["../../../src/models/DatasourceModel.ts"],"names":["AbstractModel","DatasourceModel","constructor","jobModel","apiClient","makeEntityKey","Error","update","create"],"mappings":"AAAA,SAAQA,aAAR;AAMA,OAAO,MAAMC,eAAN,SACGD,aADH,CAEkD;AACvDE,EAAAA,WAAW,CAACC,QAAD,EAAmBC,SAAnB,EAA6C;AACtD,UAAMD,QAAN,EAAgBC,SAAhB,EAA2B,YAA3B;AACD;;AAESC,EAAAA,aAAa,GAAU;AAC/B,UAAM,IAAIC,KAAJ,CAAU,oCAAV,CAAN;AACD;;AAEW,QAANC,MAAM,GAAmB;AAC7B,UAAM,IAAID,KAAJ,CAAU,oCAAV,CAAN;AACD;;AAEW,QAANE,MAAM,GAAmB;AAC7B,UAAM,IAAIF,KAAJ,CAAU,oCAAV,CAAN;AACD;;AAfsD","sourcesContent":["import {AbstractModel} from '../classes';\nimport {IEntityModel, IModel} from '../index';\nimport {AxiosInstance} from 'axios';\nimport {AlationEntityId} from '../types';\nimport {IAlationEntity, ICustomField} from '../interfaces';\n\nexport class DatasourceModel<Entity extends IDatasource = IDatasource, Search extends IDatasourceSearchParams = IDatasourceSearchParams>\n  extends AbstractModel<Entity, any, Search, any, any>\n  implements IEntityModel<Entity, any, Search, any, any> {\n  constructor(jobModel: IModel, apiClient: AxiosInstance) {\n    super(jobModel, apiClient, 'datasource');\n  }\n\n  protected makeEntityKey(): never {\n    throw new Error('CODE00000400 method is not allowed');\n  }\n\n  async update(): Promise<never> {\n    throw new Error('CODE00000401 method is not allowed');\n  }\n\n  async create(): Promise<never> {\n    throw new Error('CODE00000402 method is not allowed');\n  }\n}\n\nexport interface IDatasource<CustomFields extends ICustomField = ICustomField> extends IAlationEntity {\n  'is_virtual': boolean;\n  'uri': string;\n  'dbtype': string;\n  'title': string;\n  'description': string;\n  'url': string;\n  'custom_fields': Array<CustomFields>;\n}\n\nexport type IDatasourceSearchParams = {\n  'id'?: AlationEntityId;\n  'title'?: string;\n  'dbtype'?: string;\n  'is_virtual'?: boolean;\n  'uri'?: string;\n}\n"],"file":"DatasourceModel.js"}