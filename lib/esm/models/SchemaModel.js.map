{"version":3,"sources":["../../../src/models/SchemaModel.ts"],"names":["AbstractModel","SchemaModel","constructor","jobModel","apiClient","makeEntityKey","datasourceId","key","name"],"mappings":"AAAA,SAAQA,aAAR;AAMA,OAAO,MAAMC,WAAN,SAIGD,aAJH,CAKmE;AACxEE,EAAAA,WAAW,CAACC,QAAD,EAAmBC,SAAnB,EAA6C;AACtD,UAAMD,QAAN,EAAgBC,SAAhB,EAA2B,QAA3B;AACD;;AAESC,EAAAA,aAAa,CAACC,YAAD,EAAuBC,GAAvB,EAAoD;AACzE,WAAQ,GAAED,YAAa,IAAGC,GAAG,CAACC,IAAK,EAAnC;AACD;;AAPuE","sourcesContent":["import {AbstractModel} from '../classes';\nimport {IEntityModel, IModel} from '../index';\nimport {AxiosInstance} from 'axios';\nimport {AlationEntityId, AlationKey} from '../types';\nimport {IAlationEntity, IAlationUpdateBase, ICreateData, ICreateKey, ICustomField} from '../interfaces';\n\nexport class SchemaModel<Entity extends ISchema = ISchema,\n    Update extends ISchemaUpdate = ISchemaUpdate,\n    Search extends ISchemaSearchParams = ISchemaSearchParams,\n    CreateData extends ISchemaCreate = ISchemaCreate>\n  extends AbstractModel<Entity, Update, Search, ISchemaKey, CreateData>\n  implements IEntityModel<Entity, Update, Search, ISchemaKey, CreateData> {\n  constructor(jobModel: IModel, apiClient: AxiosInstance) {\n    super(jobModel, apiClient, 'schema');\n  }\n\n  protected makeEntityKey(datasourceId: number, key: ISchemaKey): AlationKey {\n    return `${datasourceId}.${key.name}`;\n  }\n}\n\nexport interface ISchema<CustomFields extends ICustomField = ICustomField> extends IAlationEntity {\n  'ds_id': AlationEntityId;\n  'name': string;\n  'db_comment': null | string;\n  'title': string;\n  'description': string;\n  'url': string;\n  'custom_fields': Array<CustomFields>;\n}\n\nexport interface ISchemaUpdate<CustomFields extends ICustomField = ICustomField> extends IAlationUpdateBase {\n  'key': AlationKey;\n  'title'?: string;\n  'name'?: string;\n  'description'?: string;\n  'data_type'?: string;\n  'db_comment'?: string | null;\n  'is_primary_key'?: boolean;\n  'is_foreign_key'?: boolean;\n  'nullable'?: boolean;\n  'db_table_type'?: null | string;\n  'is_view'?: boolean;\n  'is_synonym'?: boolean;\n  'synonyms'?: null | string;\n  'base_table'?: null | string;\n  'custom_fields'?: CustomFields[];\n}\n\nexport interface ISchemaKey extends Required<ICreateKey> {\n  'name': string;\n}\n\nexport type ISchemaSearchParams = {\n  'id'?: AlationEntityId;\n  'ds_id'?: AlationEntityId;\n  'title'?: string;\n  'name'?: string;\n}\n\nexport type ISchemaCreate<CustomFields extends ICustomField = ICustomField> = ICreateData & Omit<ISchemaUpdate<CustomFields>, 'key'>;\n"],"file":"SchemaModel.js"}