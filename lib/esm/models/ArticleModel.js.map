{"version":3,"sources":["../../../src/models/ArticleModel.ts"],"names":["ALATION_CATALOG_ROUTE","HTTP_STATUS","ArticleModel","constructor","jobModel","apiClient","core","entityType","getById","id","data","get","error","console","message","search","config","limit","all","getAllData","url","method","params","getPagesData","update","records","Array","isArray","result","record","body","put","push","create","entity","post","e","delete","idCollection","response","status","NO_CONTENT","results","addChild","child","deleteChild","otype"],"mappings":"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","sourcesContent":["import {IAttachmentField, IAuthorField, IChildrenField, ICustomTemplate, IEditorField} from '../interfaces/fields';\nimport {IAlationEntity, IAlationUpdateBase, ICreateData, ICustomField, IModel, IPageResponse} from '../interfaces';\nimport {AlationEntityId, AlationEntityType, Flag} from '../types';\nimport {AxiosInstance} from 'axios';\nimport {ALATION_CATALOG_ROUTE, HTTP_STATUS} from '../constants';\n\nexport class ArticleModel<Entity extends IArticle = IArticle,\n    Update extends IArticleUpdate = IArticleUpdate,\n    Search extends IArticleSearch = IArticleSearch,\n    CreateData extends IArticleCreate = IArticleCreate> {\n  protected core: IModel;\n  protected apiClient: AxiosInstance;\n  protected entityType: AlationEntityType;\n\n  constructor(jobModel: IModel, apiClient: AxiosInstance) {\n    this.core = jobModel;\n    this.apiClient = apiClient;\n    this.entityType = 'article';\n  }\n\n  async getById<E extends Entity = Entity>(id: AlationEntityId): Promise<E | null> {\n    try {\n      const {data} = await this.apiClient.get<E>(`${ALATION_CATALOG_ROUTE[this.entityType]}/${id}/`);\n\n      return data ?? null;\n    } catch (error) {\n      console.error('CODE00000300 getById(): ' + error?.message);\n      return null;\n    }\n  }\n\n  async search<E extends Entity = Entity, S extends Search = Search>(config?: S): Promise<IPageResponse<E>>;\n  async search<E extends Entity = Entity, S extends Search = Search>(config: S, all: Flag): Promise<Array<E>>;\n  async search<E extends Entity = Entity, S extends Search = Search>(config: S, limit: number): Promise<IPageResponse<E>>;\n  async search<E extends Entity = Entity, S extends Search = Search>(config: S, limit: number, all: Flag): Promise<Array<E>>;\n  async search<E extends Entity = Entity, S extends Search = Search>(config?: S, limit?: Flag | number, all?: Flag): Promise<E[] | IPageResponse<E>> {\n    try {\n      if (!config) {\n        return this.core.getAllData({\n          url: ALATION_CATALOG_ROUTE[this.entityType],\n          method: 'get',\n        });\n      }\n      if (typeof limit === 'boolean' && limit) {\n        return this.core.getAllData<E>({\n          url: ALATION_CATALOG_ROUTE[this.entityType],\n          method: 'get',\n          params: config,\n        });\n      }\n      if (typeof limit === 'number' && limit > 0) {\n        if (typeof all === 'boolean' && all) {\n          return this.core.getAllData<E>({\n            url: ALATION_CATALOG_ROUTE[this.entityType],\n            method: 'get',\n            params: {...config, limit},\n          });\n        }\n        return this.core.getPagesData<E>({\n          url: ALATION_CATALOG_ROUTE[this.entityType],\n          method: 'get',\n          params: {...config, limit},\n        });\n      }\n      return this.core.getPagesData<E>({\n        url: ALATION_CATALOG_ROUTE[this.entityType],\n        method: 'get',\n        params: config,\n      });\n    } catch (error) {\n      console.error('CODE00000302 search(): ' + error?.message);\n      return [];\n    }\n  }\n\n  async update<E extends Entity = Entity, U extends Update = Update>(records: U): Promise<E>;\n  async update<E extends Entity = Entity, U extends Update = Update>(records: U[]): Promise<E[]>;\n  async update<E extends Entity = Entity, U extends Update = Update>(records: U[] | U): Promise<E | E[]> {\n    try {\n      if (Array.isArray(records)) {\n        const result: E[] = [];\n\n        for (const record of records) {\n          const {id, ...body} = record;\n\n          const {data} = await this.apiClient.put<E>(`/integration/v1/article/${id}/`, body);\n          result.push(data);\n        }\n        return result;\n      } else {\n        const {id, ...body} = records;\n        const {data} = await this.apiClient.put<E>(`/integration/v1/article/${id}/`, body);\n        return data;\n      }\n    } catch (error) {\n      console.error('CODE00000301 update(): ' + error?.message);\n      throw error;\n    }\n  }\n\n  async create<E extends Entity = Entity, CD extends CreateData = CreateData>(params: CD): Promise<E>\n  async create<E extends Entity = Entity, CD extends CreateData = CreateData>(params: CD[]): Promise<E[]>\n  async create<E extends Entity = Entity, CD extends CreateData = CreateData>(params: CD | CD[]): Promise<E | E[]> {\n    try {\n      if (!Array.isArray(params)) {\n        const {data: entity} = await this.apiClient.post<E>(ALATION_CATALOG_ROUTE[this.entityType] + '/', params);\n\n        return entity;\n      }\n\n      const result: E[] = [];\n      for (const record of params) {\n        const {data} = await this.apiClient.post<E>(ALATION_CATALOG_ROUTE[this.entityType] + '/', record);\n        result.push(data);\n      }\n\n      return result;\n    } catch (e) {\n      console.error('CODE00000303 create(): ', e?.message);\n      throw e;\n    }\n  }\n\n  async delete(id: AlationEntityId): Promise<boolean>;\n  async delete(idCollection: AlationEntityId[]): Promise<boolean[]>;\n  async delete(idCollection: AlationEntityId | AlationEntityId[]): Promise<boolean | boolean[]> {\n    try {\n      if (!Array.isArray(idCollection)) {\n        const response = await this.apiClient.delete(`${ALATION_CATALOG_ROUTE[this.entityType]}/${idCollection}/`);\n        return response.status === HTTP_STATUS.NO_CONTENT;\n      }\n      const results: boolean[] = [];\n      for (const id of idCollection) {\n        const response = await this.apiClient.delete(`${ALATION_CATALOG_ROUTE[this.entityType]}/${id}/`);\n        results.push(response.status === HTTP_STATUS.NO_CONTENT);\n      }\n      return results;\n    } catch (e) {\n      console.error('CODE00000304 delete(): ', e?.message);\n      throw e;\n    }\n  }\n\n\n  async addChild(id: AlationEntityId, child: IAddChild): Promise<IArticleChildren | null> {\n    try {\n      const {data} = await this.apiClient.post<IArticleChildren>(`/api/v1/article/${id}/children/`, child);\n      return data ?? null;\n    } catch (e) {\n      console.error('CODE00000305 addChild(): ', e?.message);\n      throw e;\n    }\n  }\n\n  async deleteChild(id: AlationEntityId, child: IAddChild): Promise<boolean> {\n    try {\n      const {status} = await this.apiClient.delete<IArticleChildren>(`api/v1/article/${id}/children/${child.otype}=${child.id}/`);\n      return status === HTTP_STATUS.NO_CONTENT;\n    } catch (e) {\n      console.error('CODE00000306 deleteChild(): ', e?.message);\n      throw e;\n    }\n  }\n}\n\nexport interface IArticle<CustomFields extends ICustomField = ICustomField> extends IAlationEntity {\n  'id': AlationEntityId;\n  'agile_approval_enabled': boolean;\n  'attachments': IAttachmentField[];\n  'author': IAuthorField;\n  'body': string;\n  'children': IChildrenField[];\n  'custom_fields': CustomFields[],\n  'custom_templates': ICustomTemplate[];\n  'editors': IEditorField[];\n  'has_children': boolean;\n  'private': boolean;\n  'title': string;\n  'ts_updated': string;\n  'ts_created': string;\n  'url': string;\n}\n\nexport interface IArticleUpdate extends IAlationUpdateBase {\n  'id': AlationEntityId;\n  'title': string;\n  'body': string;\n  'private'?: boolean;\n  'agile_approval_enabled'?: boolean;\n  'custom_templates'?: AlationEntityId[];\n  'children'?: IArticleChildren[];\n}\n\nexport interface IArticleSearch {\n  /**\n   * Filter articles with this title.\n   * Example: Articles API\n   */\n  'title'?: string;\n  /**\n   * Filter articles whose titles contain this word.\n   * Example: title__icontains=sales\n   */\n  'title__icontains'?: string;\n  /**\n   * Filter articles with/without children. Example: has_children=true\n   */\n  'has_children'?: boolean;\n  /**\n   * Filter articles with atleast one custom_template belonging to this list.\n   * Example: custom_field_templates=[1,2]\n   */\n  'custom_field_templates'?: AlationEntityId[];\n  /**\n   * Fields that needs to be returned for each article.\n   * Example: values=id,custom_templates\n   */\n  'values'?: string;\n}\n\nexport interface IArticleCreate extends ICreateData {\n  /**\n   * The title of the article.\n   */\n  'title': string;\n  /**\n   * The body of the article.\n   */\n  'body': string;\n  /**\n   * If the article is private.\n   */\n  'private'?: boolean;\n  /**\n   * true when Agile Approval is enabled on the article. For new Articles, this defaults to false.\n   */\n  'agile_approval_enabled'?: boolean;\n  /**\n   * List of updated custom-template Ids.\n   Example: [1,2,3]\n   */\n  'custom_templates'?: AlationEntityId[];\n  /**\n   * List of new children (can be article or table), to be added to the article.\n   Example: [{\"id\": 1, \"otype\": \"Table\"}, {\"id\": 3, \"otype\": \"Article\"}]\n   */\n  'children'?: Omit<Omit<IChildrenField, 'title'>, 'url'>[];\n}\n\nexport interface IArticleChildren {\n  id: AlationEntityId;\n  otype: IArticleChildrenObjectType;\n}\n\nexport type IArticleChildrenObjectType = 'table' | 'article';\n\nexport type IAddChild = {\n  otype: IArticleChildrenObjectType;\n  id: AlationEntityId;\n}\n"],"file":"ArticleModel.js"}