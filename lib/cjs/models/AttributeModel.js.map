{"version":3,"sources":["../../../src/models/AttributeModel.ts"],"names":["AttributeModel","AbstractModel","constructor","jobModel","apiClient","create","dsId","key","data","wait","Array","isArray","requestData","JSON","stringify","makeTableEntityKey","makeEntityKey","join","job","post","core","getJobResult","map","k","d","flat","requestPages","page","formattedPage","record","push","jobCollection","request","Promise","all","datasourceId","name","schema_name","table_name"],"mappings":";;;;;;;AAAA;;AAcA;;AACA;;AAEO,MAAMA,cAAN,SAIGC,sBAJH,CAKsE;AAC3EC,EAAAA,WAAW,CAACC,QAAD,EAAmBC,SAAnB,EAA6C;AACtD,UAAMD,QAAN,EAAgBC,SAAhB,EAA2B,WAA3B;AACD;;AASW,QAANC,MAAM,CACRC,IADQ,EAERC,GAFQ,EAGRC,IAHQ,EAIRC,IAJQ,EAIyD;AACnE,QAAI,CAACC,KAAK,CAACC,OAAN,CAAcJ,GAAd,CAAL,EAAyB;AACvB,YAAMK,WAAW,GAAG,CAClBC,IAAI,CAACC,SAAL,CAAe;AAACP,QAAAA,GAAG,EAAE,KAAKQ,kBAAL,CAAwBT,IAAxB,EAA8BC,GAA9B;AAAN,OAAf,CADkB,EAElBM,IAAI,CAACC,SAAL,CAAe;AAACP,QAAAA,GAAG,EAAE,KAAKS,aAAL,CAAmBV,IAAnB,EAAyBC,GAAzB,CAAN;AAAqC,WAAIC;AAAzC,OAAf,CAFkB,EAGlBS,IAHkB,CAGb,IAHa,CAApB;AAKA,YAAM;AAACT,QAAAA,IAAI,EAAEU;AAAP,UAAc,MAAM,KAAKd,SAAL,CAAee,IAAf,CAA0B,mCAAmBb,IAAnB,CAA1B,EAAoDM,WAApD,CAA1B;AAEA,aAAOH,IAAI,GAAG,KAAKW,IAAL,CAAUC,YAAV,CAAuBH,GAAvB,CAAH,GAAiCA,GAA5C;AACD,KATD,MASO;AACL,UAAI,OAAOV,IAAP,KAAgB,QAApB,EAA8B;AAC5B,cAAMI,WAAW,GAAGL,GAAG,CAACe,GAAJ,CAAkB,CAAC;AAACf,UAAAA,GAAG,EAAEgB,CAAN;AAASf,UAAAA,IAAI,EAAEgB;AAAf,SAAD,KAAuB;AAC3D,iBAAO,CACLX,IAAI,CAACC,SAAL,CAAe;AAACP,YAAAA,GAAG,EAAE,KAAKQ,kBAAL,CAAwBT,IAAxB,EAA8BiB,CAA9B;AAAN,WAAf,CADK,EAELV,IAAI,CAACC,SAAL,CAAe;AAACP,YAAAA,GAAG,EAAE,KAAKS,aAAL,CAAmBV,IAAnB,EAAyBiB,CAAzB,CAAN;AAAmC,eAAIC;AAAvC,WAAf,CAFK,CAAP;AAID,SALmB,EAKjBC,IALiB,GAKVR,IALU,CAKL,IALK,CAApB;AAMA,cAAM;AAACT,UAAAA,IAAI,EAAEU;AAAP,YAAc,MAAM,KAAKd,SAAL,CAAee,IAAf,CAA0B,mCAAmBb,IAAnB,CAA1B,EAAoDM,WAApD,CAA1B;;AACA,YAAI,OAAOJ,IAAP,KAAgB,SAAhB,IAA6BA,IAAjC,EAAuC;AACrC,iBAAO,KAAKY,IAAL,CAAUC,YAAV,CAAuBH,GAAvB,CAAP;AACD;;AACD,eAAOA,GAAP;AACD;;AACD,YAAMQ,YAAsB,GAAG,EAA/B;;AAEA,WAAK,MAAMC,IAAX,IAAmB,8BAA0DpB,GAA1D,EAA+DC,IAA/D,CAAnB,EAAyF;AACvF,cAAMoB,aAAyB,GAAG,EAAlC;;AACA,aAAK,MAAMC,MAAX,IAAqBF,IAArB,EAA2B;AACzBC,UAAAA,aAAa,CAACE,IAAd,CAAmB,CACjBjB,IAAI,CAACC,SAAL,CAAe;AAACP,YAAAA,GAAG,EAAE,KAAKQ,kBAAL,CAAwBT,IAAxB,EAA8BuB,MAAM,CAACtB,GAArC;AAAN,WAAf,CADiB,EAEjBM,IAAI,CAACC,SAAL,CAAe;AAACP,YAAAA,GAAG,EAAE,KAAKS,aAAL,CAAmBV,IAAnB,EAAyBuB,MAAM,CAACtB,GAAhC,CAAN;AAA4C,eAAGsB,MAAM,CAACrB;AAAtD,WAAf,CAFiB,CAAnB;AAID;;AACDkB,QAAAA,YAAY,CAACI,IAAb,CAAkBF,aAAa,CAACH,IAAd,GAAqBR,IAArB,CAA0B,IAA1B,CAAlB;AACD;;AAED,YAAMc,aAA0B,GAAG,EAAnC;;AACA,WAAK,MAAMC,OAAX,IAAsBN,YAAtB,EAAoC;AAClC,cAAM;AAAClB,UAAAA,IAAI,EAAEU;AAAP,YAAc,MAAM,KAAKd,SAAL,CAAee,IAAf,CAA0B,mCAAmBb,IAAnB,CAA1B,EAAoD0B,OAApD,CAA1B;AACAD,QAAAA,aAAa,CAACD,IAAd,CAAmBZ,GAAnB;AACD;;AAED,UAAI,OAAOT,IAAP,KAAgB,SAAhB,IAA6BA,IAAjC,EAAuC;AACrC,eAAO,MAAMwB,OAAO,CAACC,GAAR,CAAwBH,aAAa,CAACT,GAAd,CAAwCJ,GAAD,IAAU,KAAKE,IAAL,CAAUC,YAAV,CAAuBH,GAAvB,CAAjD,CAAxB,CAAb;AACD;;AACD,aAAOa,aAAP;AACD;AACF;;AAESf,EAAAA,aAAa,CAACmB,YAAD,EAAuB5B,GAAvB,EAAuD;AAC5E,WAAQ,GAAE,KAAKQ,kBAAL,CAAwBoB,YAAxB,EAAsC5B,GAAtC,CAA2C,IAAGA,GAAG,CAAC6B,IAAK,EAAjE;AACD;;AAESrB,EAAAA,kBAAkB,CAACoB,YAAD,EAAuB5B,GAAvB,EAAuD;AACjF,WAAQ,GAAE4B,YAAa,IAAG5B,GAAG,CAAC8B,WAAY,IAAG9B,GAAG,CAAC+B,UAAW,EAA5D;AACD;;AAxE0E","sourcesContent":["import {AbstractModel} from '../classes';\nimport {IEntityModel, IModel} from '..';\nimport {AxiosInstance} from 'axios';\nimport {AlationEntityId, AlationKey, Flag} from '../types';\nimport {\n  IAlationEntity,\n  IAlationUpdateBase,\n  ICreateData,\n  ICreateKey,\n  ICreateRecord,\n  ICustomField,\n  IJob,\n  IJobFinish,\n} from '../interfaces';\nimport {alationCreateRoute} from '../constants';\nimport {sliceCollection} from '../helpers';\n\nexport class AttributeModel<Entity extends IAttribute = IAttribute,\n    Update extends IAttributeUpdate = IAttributeUpdate,\n    Search extends IAttributeSearchParams = IAttributeSearchParams,\n    CreateData extends IAttributeCreate = IAttributeCreate>\n  extends AbstractModel<Entity, Update, Search, IAttributeKey, CreateData>\n  implements IEntityModel<Entity, Update, Search, IAttributeKey, CreateData> {\n  constructor(jobModel: IModel, apiClient: AxiosInstance) {\n    super(jobModel, apiClient, 'attribute');\n  }\n\n  async create<CD extends CreateData = CreateData>(dsId: number, key: IAttributeKey, data: CD): Promise<IJob>;\n  async create<CD extends CreateData = CreateData>(dsId: number, key: IAttributeKey, data: CD, wait: Flag): Promise<IJobFinish>;\n  async create<CD extends CreateData = CreateData>(dsId: number, entities: ICreateRecord<IAttributeKey, CD>[]): Promise<IJob>;\n  async create<CD extends CreateData = CreateData>(dsId: number, entities: ICreateRecord<IAttributeKey, CD>[], wait: Flag): Promise<IJobFinish>;\n  async create<CD extends CreateData = CreateData>(dsId: number, entities: ICreateRecord<IAttributeKey, CD>[], limit: number): Promise<IJob[]>;\n  async create<CD extends CreateData = CreateData>(dsId: number, entities: ICreateRecord<IAttributeKey, CD>[], limit: number, wait: Flag):\n      Promise<IJobFinish[]>;\n  async create<CD extends CreateData = CreateData>(\n      dsId: number,\n      key: IAttributeKey | ICreateRecord<IAttributeKey, CD>[],\n      data?: CD | Flag | number,\n      wait?: Flag): Promise<IJob | IJobFinish | IJob[] | IJobFinish[]> {\n    if (!Array.isArray(key)) {\n      const requestData = [\n        JSON.stringify({key: this.makeTableEntityKey(dsId, key)}),\n        JSON.stringify({key: this.makeEntityKey(dsId, key), ...(data as CD)}),\n      ].join('\\n');\n\n      const {data: job} = await this.apiClient.post<IJob>(alationCreateRoute(dsId), requestData);\n\n      return wait ? this.core.getJobResult(job) : job;\n    } else {\n      if (typeof data !== 'number') {\n        const requestData = key.map<string[]>(({key: k, data: d}) => {\n          return [\n            JSON.stringify({key: this.makeTableEntityKey(dsId, k)}),\n            JSON.stringify({key: this.makeEntityKey(dsId, k), ...(d as CD)}),\n          ];\n        }).flat().join('\\n');\n        const {data: job} = await this.apiClient.post<IJob>(alationCreateRoute(dsId), requestData);\n        if (typeof data === 'boolean' && data) {\n          return this.core.getJobResult(job);\n        }\n        return job;\n      }\n      const requestPages: string[] = [];\n\n      for (const page of sliceCollection<ICreateRecord<IAttributeKey, CreateData>>(key, data)) {\n        const formattedPage: string[][] = [];\n        for (const record of page) {\n          formattedPage.push([\n            JSON.stringify({key: this.makeTableEntityKey(dsId, record.key)}),\n            JSON.stringify({key: this.makeEntityKey(dsId, record.key), ...record.data}),\n          ]);\n        }\n        requestPages.push(formattedPage.flat().join('\\n'));\n      }\n\n      const jobCollection: Array<IJob> = [];\n      for (const request of requestPages) {\n        const {data: job} = await this.apiClient.post<IJob>(alationCreateRoute(dsId), request);\n        jobCollection.push(job);\n      }\n\n      if (typeof wait === 'boolean' && wait) {\n        return await Promise.all<IJobFinish>(jobCollection.map<Promise<IJobFinish>>((job) => (this.core.getJobResult(job))));\n      }\n      return jobCollection;\n    }\n  }\n\n  protected makeEntityKey(datasourceId: number, key: IAttributeKey): AlationKey {\n    return `${this.makeTableEntityKey(datasourceId, key)}.${key.name}`;\n  }\n\n  protected makeTableEntityKey(datasourceId: number, key: IAttributeKey): AlationKey {\n    return `${datasourceId}.${key.schema_name}.${key.table_name}`;\n  }\n}\n\nexport interface IAttribute<CustomFields extends ICustomField = ICustomField> extends IAlationEntity {\n  'name': string;\n  'ds_id': AlationEntityId;\n  'schema_id': AlationEntityId;\n  'table_id': AlationEntityId;\n  'table_name': string;\n  'data_type': string;\n  'db_comment': null | any;\n  'is_primary_key': boolean;\n  'is_foreign_key': boolean;\n  'nullable': boolean;\n  'title': string;\n  'description': string;\n  'url': string;\n  'custom_fields': Array<CustomFields>;\n}\n\nexport interface IAttributeUpdate<CustomFields extends ICustomField = ICustomField> extends IAlationUpdateBase {\n  'key': AlationKey;\n  'title'?: string;\n  'name'?: string;\n  'description'?: string;\n  'data_type'?: string;\n  'db_comment'?: string | null;\n  'is_primary_key'?: boolean;\n  'is_foreign_key'?: boolean;\n  'nullable'?: boolean;\n  'custom_fields'?: CustomFields[];\n}\n\nexport interface IAttributeKey extends Required<ICreateKey> {\n  'schema_name': string;\n  'table_name': string;\n  'name': string;\n}\n\nexport type IAttributeSearchParams = {\n  'id'?: AlationEntityId;\n  'ds_id'?: AlationEntityId;\n  'schema_id'?: AlationEntityId;\n  'table_id'?: AlationEntityId;\n  'title'?: string;\n  'name'?: string;\n  'schema_name'?: string;\n  'table_name'?: string;\n}\n\nexport type IAttributeCreate<CustomFields extends ICustomField = ICustomField> = ICreateData & Omit<IAttributeUpdate<CustomFields>, 'key'>;\n"],"file":"AttributeModel.js"}