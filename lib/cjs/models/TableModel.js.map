{"version":3,"sources":["../../../src/models/TableModel.ts"],"names":["TableModel","AbstractModel","constructor","jobModel","apiClient","makeEntityKey","datasourceId","key","schema_name","name"],"mappings":";;;;;;;AAAA;;AAMO,MAAMA,UAAN,SAIGC,sBAJH,CAKkE;AACvEC,EAAAA,WAAW,CAACC,QAAD,EAAmBC,SAAnB,EAA6C;AACtD,UAAMD,QAAN,EAAgBC,SAAhB,EAA2B,OAA3B;AACD;;AAESC,EAAAA,aAAa,CAACC,YAAD,EAAuBC,GAAvB,EAAmD;AACxE,WAAQ,GAAED,YAAa,IAAGC,GAAG,CAACC,WAAY,IAAGD,GAAG,CAACE,IAAK,EAAtD;AACD;;AAPsE","sourcesContent":["import {AbstractModel} from '../classes';\nimport {IEntityModel, IModel} from '../index';\nimport {AxiosInstance} from 'axios';\nimport {AlationEntityId, AlationKey} from '../types';\nimport {IAlationEntity, IAlationUpdateBase, ICreateData, ICreateKey, ICustomField} from '../interfaces';\n\nexport class TableModel<Entity extends ITable = ITable,\n    Update extends ITableUpdate = ITableUpdate,\n    Search extends ITableSearchParams = ITableSearchParams,\n    CreateData extends ITableCreate = ITableCreate>\n  extends AbstractModel<Entity, Update, Search, ITableKey, CreateData>\n  implements IEntityModel<Entity, Update, Search, ITableKey, CreateData> {\n  constructor(jobModel: IModel, apiClient: AxiosInstance) {\n    super(jobModel, apiClient, 'table');\n  }\n\n  protected makeEntityKey(datasourceId: number, key: ITableKey): AlationKey {\n    return `${datasourceId}.${key.schema_name}.${key.name}`;\n  }\n}\n\nexport interface ITable<CustomFields extends ICustomField = ICustomField> extends IAlationEntity {\n  'ds_id': AlationEntityId;\n  'schema_id': AlationEntityId;\n  'db_table_type': null | string;\n  'is_view': boolean;\n  'is_synonym': boolean;\n  'name': string;\n  'schema_name': string;\n  'synonyms': null | string;\n  'base_table': null | string;\n  'db_comment': null | string;\n  'title': string;\n  'description': string;\n  'url': string;\n  'custom_fields': Array<CustomFields>;\n}\n\nexport interface ITableUpdate<CustomFields extends ICustomField = ICustomField> extends IAlationUpdateBase {\n  'key': AlationKey;\n  'title'?: string;\n  'name'?: string;\n  'description'?: string;\n  'data_type'?: string;\n  'db_comment'?: string | null;\n  'is_primary_key'?: boolean;\n  'is_foreign_key'?: boolean;\n  'nullable'?: boolean;\n  'db_table_type'?: null | string;\n  'is_view'?: boolean;\n  'is_synonym'?: boolean;\n  'synonyms'?: null | string;\n  'base_table'?: null | string;\n  'custom_fields'?: CustomFields[];\n}\n\nexport interface ITableKey extends Required<ICreateKey> {\n  'schema_name': string;\n  'name': string;\n}\n\nexport type ITableSearchParams = {\n  'id'?: AlationEntityId;\n  'ds_id'?: AlationEntityId;\n  'schema_id'?: AlationEntityId;\n  'schema_name'?: string;\n  'title'?: string;\n  'name'?: string;\n}\n\nexport type ITableCreate<CustomFields extends ICustomField = ICustomField> = ICreateData & Omit<ITableUpdate<CustomFields>, 'key'>;\n"],"file":"TableModel.js"}