{"version":3,"sources":["../../src/index.ts"],"names":["Alation","AlationConnector","constructor","userData","host","options","Datasource","DatasourceModel","apiClient","Schema","SchemaModel","Table","TableModel","Attribute","AttributeModel","Article","ArticleModel","User","UserModel","getJobState","bind","getJobResult","getAllData","getPagesData","updateCustomFieldsValue","job","data","get","ALATION_JOB_STATE_ROUTE","params","name","job_name","status","JobStatusEnum","RUNNING","result","JSON","parse","e","console","error","message","interval","jobInterval","response","config","push","values","next","headers","ALATION_NEXT_PAGE_HEADER_KEY","url","body","post","CUSTOM_FIELD_VALUE_ROUTE","deleteCustomFieldValue","id","delete"],"mappings":"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","sourcesContent":["import {ArticleModel, AttributeModel, DatasourceModel, SchemaModel, TableModel} from './models';\nimport {AlationConnector, IConnectorOptions} from './classes';\nimport {\n  IAlationEntity,\n  IConnectorAuthConfig,\n  ICustomFieldValue,\n  ICustomFieldValueDeleteResponse,\n  ICustomFieldValueResponse,\n  IJob,\n  IJobFinish,\n  IJobSerialize,\n  IJobState,\n  IModel,\n  IPageResponse,\n  IRequestConfig,\n} from './interfaces';\nimport {ALATION_JOB_STATE_ROUTE, ALATION_NEXT_PAGE_HEADER_KEY, CUSTOM_FIELD_VALUE_ROUTE} from './constants';\nimport {sleep} from './helpers';\nimport {AlationEntityId, JobStatusEnum} from './types';\nimport {AxiosPromise} from 'axios';\nimport {UserModel} from './models/UserModel';\n\nexport class Alation<Article extends ArticleModel = ArticleModel,\n    Attribute extends AttributeModel = AttributeModel,\n    Table extends TableModel = TableModel,\n    Schema extends SchemaModel = SchemaModel,\n    Datasource extends DatasourceModel = DatasourceModel,\n    User extends UserModel = UserModel> extends AlationConnector implements IModel {\n  public readonly Datasource: Datasource;\n  public readonly Schema: Schema;\n  public readonly Table: Table;\n  public readonly Attribute: Attribute;\n  public readonly Article: Article;\n  public readonly User: User;\n\n\n  constructor(userData: IConnectorAuthConfig, host: string, options?: IConnectorOptions) {\n    super(userData, host, options);\n    this.Datasource = new DatasourceModel(this, this.apiClient) as Datasource;\n    this.Schema = new SchemaModel(this, this.apiClient) as Schema;\n    this.Table = new TableModel(this, this.apiClient) as Table;\n    this.Attribute = new AttributeModel(this, this.apiClient) as Attribute;\n    this.Article = new ArticleModel(this, this.apiClient) as Article;\n    this.User = new UserModel(this, this.apiClient) as User;\n\n    this.getJobState = this.getJobState.bind(this);\n    this.getJobResult = this.getJobResult.bind(this);\n    this.getAllData = this.getAllData.bind(this);\n    this.getPagesData = this.getPagesData.bind(this);\n    this.updateCustomFieldsValue = this.updateCustomFieldsValue.bind(this);\n  }\n\n  async getJobState(job: IJob): Promise<IJobState> {\n    try {\n      const {data} = await this.apiClient.get<IJobSerialize>(ALATION_JOB_STATE_ROUTE, {params: {name: job.job_name}});\n      return {...data, ...(data.status !== JobStatusEnum.RUNNING ? {result: JSON.parse(data.result)} : {})};\n    } catch (e) {\n      console.error('CODE00000100 getJobState(): ', e?.message);\n      throw e;\n    }\n  }\n\n  async getJobResult(job: IJob, interval = this.options.jobInterval): Promise<IJobFinish> {\n    try {\n      let response = await this.getJobState(job);\n      while (response.status === 'running') {\n        await sleep(interval);\n        response = await this.getJobState(job);\n      }\n      return response as IJobFinish;\n    } catch (e) {\n      console.error('CODE00000101 getJobResult(): ', e?.message);\n      throw e;\n    }\n  }\n\n  async getAllData<E extends IAlationEntity>(config: IRequestConfig): Promise<Array<E>> {\n    try {\n      const result: Array<E> = [];\n\n      let response = await this.getPagesData<E>(config);\n      result.push(...response.values);\n\n      while (response.next) {\n        response = await response.next();\n        result.push(...response.values);\n      }\n\n      return result;\n    } catch (e) {\n      console.error('CODE00000304 getAllData(): ', e?.message);\n      throw e;\n    }\n  }\n\n  async getPagesData<E extends IAlationEntity>(config: IRequestConfig): Promise<IPageResponse<E>> {\n    try {\n      const response = await (this.apiClient(config) as AxiosPromise<E[]>);\n      const next: string | undefined = response?.headers[ALATION_NEXT_PAGE_HEADER_KEY];\n\n      return {\n        values: response.data,\n        next: next ? () => (this.getPagesData({...config, url: next})) : null,\n      };\n    } catch (e) {\n      console.error('CODE00000305 getPagesData(): ', e?.message);\n      throw e;\n    }\n  }\n\n  async updateCustomFieldsValue<V = any>(body: ICustomFieldValue<V>): Promise<ICustomFieldValueResponse<V>> {\n    try {\n      const {data} = await this.apiClient.post<ICustomFieldValueResponse>(CUSTOM_FIELD_VALUE_ROUTE, body);\n      return data;\n    } catch (e) {\n      console.error('CODE00000306 updateCustomFields(): ' + e?.message);\n      throw e;\n    }\n  }\n\n  async deleteCustomFieldValue(id: AlationEntityId): Promise<ICustomFieldValueDeleteResponse> {\n    try {\n      const {data} = await this.apiClient.delete<ICustomFieldValueDeleteResponse>(`${CUSTOM_FIELD_VALUE_ROUTE}${id}/`);\n      return data;\n    } catch (e) {\n      console.error('CODE00000307 deleteCustomFieldValue(): ' + e?.message);\n      throw e;\n    }\n  }\n}\n\nexport * from './classes';\nexport * from './helpers';\nexport * from './interfaces';\nexport * from './models';\nexport * from './types';\n"],"file":"index.js"}